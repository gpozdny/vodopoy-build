html {
  font-size: 14px; }

body {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  position: relative;
  font-family: "Roboto-light", sans-serif;
  background-color: #000; }

body {
  line-height: 1.42;
  -webkit-font-smoothing: antialiased; }

.wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  height: 100vh;
  max-height: 100vh;
  overflow: hidden;
  width: 100%; }

.maincontent {
  -ms-flex: 1;
      flex: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }

.container {
  width: 100%;
  min-width: 320px;
  padding: 0 20px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  position: relative;
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 768px) {
    .container {
      padding: 0 30px; } }
  @media screen and (min-width: 1024px) {
    .container {
      padding: 0 40px; } }
  @media screen and (min-width: 1280px) {
    .container {
      padding: 0 60px; } }
  @media screen and (min-width: 1920px) {
    .container {
      padding: 0 120px; } }

.container--column {
  -ms-flex-direction: column;
      flex-direction: column; }

.flex-center {
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center;
  -ms-flex-align: center;
      align-items: center; }

*, *:before, *:after {
  box-sizing: border-box; }

footer {
  position: relative; }

li {
  list-style: none; }

ul {
  padding: 0;
  margin: 0; }

a {
  text-decoration: none; }

p {
  margin: 0; }

button {
  outline: 0;
  border: 0;
  cursor: pointer; }

h1 {
  margin: 0; }

.btn {
  display: inline-block;
  text-align: center;
  min-width: 280px;
  width: 65%;
  font-family: "Roboto-light", sans-serif;
  font-size: 16px;
  background-color: #f57323;
  color: white;
  padding: 20px 0;
  border: solid 1px transparent; }
  @media screen and (min-width: 600px) {
    .btn {
      min-width: 230px; } }

.btn--reverse {
  display: inline-block;
  text-align: center;
  min-width: 280px;
  width: 65%;
  font-family: "Roboto-light", sans-serif;
  font-size: 16px;
  background-color: transparent;
  color: #f57323;
  padding: 20px 0;
  border: solid 1px #f57323; }
  @media screen and (min-width: 600px) {
    .btn--reverse {
      min-width: 230px; } }

.heading {
  font-family: "Rubik-Regular", sans-serif;
  font-size: 24px;
  line-height: 1.25;
  margin-bottom: 15px;
  color: black;
  font-weight: normal; }

.title {
  font-family: "Rubik-Regular", sans-serif;
  font-size: 18px;
  color: black;
  margin: 0;
  margin-bottom: 15px;
  font-weight: normal; }

input:-webkit-autofill {
  box-shadow: 0 0 0 100px #000 inset !important;
  -webkit-text-fill-color: #fff !important;
  color: #fff !important; }

.header {
  position: fixed;
  width: 100%;
  top: 0;
  left: 0;
  background-color: #000;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  height: 60px;
  z-index: 999; }
  .header__title {
    font-size: 22px;
    color: white;
    font-family: 'light';
    text-align: center;
    letter-spacing: 10px; }

.glitch {
  color: white;
  position: relative; }

@keyframes noise-anim {
  0% {
    clip: rect(87px, 9999px, 45px, 0); }
  5% {
    clip: rect(75px, 9999px, 6px, 0); }
  10% {
    clip: rect(37px, 9999px, 29px, 0); }
  15% {
    clip: rect(39px, 9999px, 28px, 0); }
  20% {
    clip: rect(82px, 9999px, 60px, 0); }
  25% {
    clip: rect(89px, 9999px, 70px, 0); }
  30% {
    clip: rect(19px, 9999px, 20px, 0); }
  35% {
    clip: rect(38px, 9999px, 27px, 0); }
  40% {
    clip: rect(88px, 9999px, 50px, 0); }
  45% {
    clip: rect(80px, 9999px, 15px, 0); }
  50% {
    clip: rect(73px, 9999px, 86px, 0); }
  55% {
    clip: rect(22px, 9999px, 22px, 0); }
  60% {
    clip: rect(70px, 9999px, 68px, 0); }
  65% {
    clip: rect(30px, 9999px, 54px, 0); }
  70% {
    clip: rect(74px, 9999px, 44px, 0); }
  75% {
    clip: rect(87px, 9999px, 96px, 0); }
  80% {
    clip: rect(13px, 9999px, 23px, 0); }
  85% {
    clip: rect(52px, 9999px, 47px, 0); }
  90% {
    clip: rect(11px, 9999px, 89px, 0); }
  95% {
    clip: rect(85px, 9999px, 20px, 0); }
  100% {
    clip: rect(75px, 9999px, 18px, 0); } }

.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -1px 0 violet;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim 2s infinite linear alternate-reverse; }

@keyframes noise-anim-2 {
  0% {
    clip: rect(72px, 9999px, 73px, 0); }
  5% {
    clip: rect(30px, 9999px, 81px, 0); }
  10% {
    clip: rect(7px, 9999px, 54px, 0); }
  15% {
    clip: rect(20px, 9999px, 76px, 0); }
  20% {
    clip: rect(68px, 9999px, 75px, 0); }
  25% {
    clip: rect(71px, 9999px, 92px, 0); }
  30% {
    clip: rect(39px, 9999px, 61px, 0); }
  35% {
    clip: rect(7px, 9999px, 69px, 0); }
  40% {
    clip: rect(32px, 9999px, 25px, 0); }
  45% {
    clip: rect(74px, 9999px, 9px, 0); }
  50% {
    clip: rect(1px, 9999px, 69px, 0); }
  55% {
    clip: rect(66px, 9999px, 69px, 0); }
  60% {
    clip: rect(25px, 9999px, 98px, 0); }
  65% {
    clip: rect(22px, 9999px, 23px, 0); }
  70% {
    clip: rect(66px, 9999px, 96px, 0); }
  75% {
    clip: rect(43px, 9999px, 79px, 0); }
  80% {
    clip: rect(82px, 9999px, 45px, 0); }
  85% {
    clip: rect(59px, 9999px, 97px, 0); }
  90% {
    clip: rect(70px, 9999px, 87px, 0); }
  95% {
    clip: rect(5px, 9999px, 98px, 0); }
  100% {
    clip: rect(17px, 9999px, 36px, 0); } }

.glitch:before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  text-shadow: 1px 0 blue;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  animation: noise-anim-2 3s infinite linear alternate-reverse; }

.form {
  padding: 15px 25px;
  width: 70vh;
  max-width: 400px;
  border-radius: 20px;
  z-index: 9;
  position: absolute;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%); }
  @media screen and (max-width: 480px) {
    .form {
      max-width: 300px; } }
  .form__body {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    position: relative;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    z-index: 2;
    background-color: black;
    border-radius: 20px;
    padding: 20px 0; }
  .form__input {
    width: 80%; }
    .form__input input {
      width: 100%;
      border-radius: 0;
      background-color: transparent;
      border: none;
      background-image: none;
      background-color: transparent;
      box-shadow: none;
      -webkit-appearance: none;
      outline: transparent;
      color: white;
      padding-bottom: 5px;
      font-family: 'light';
      font-size: 18px;
      border-bottom: 1px solid white;
      height: 35px; }
      .form__input input:-ms-input-placeholder {
        color: white;
        opacity: 1; }
      .form__input input::placeholder {
        color: white;
        opacity: 1; }
  .form__preloader {
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    opacity: 0;
    pointer-events: none;
    z-index: 2; }
  .form__success {
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    opacity: 0;
    pointer-events: none;
    z-index: 2; }
  .form__input + .form__input {
    margin-top: 15px; }
  .form__noise {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    border-radius: 20px;
    z-index: 1; }
  .form__button {
    border: 1px solid white;
    position: relative;
    margin: 15px 0 0 0;
    padding: 5px 0;
    width: auto;
    overflow: hidden;
    background: black;
    cursor: pointer;
    color: white;
    font-family: 'light';
    -webkit-appearance: button;
    background-color: transparent;
    width: 100%;
    max-width: 200px;
    font-size: 18px;
    border-radius: 20px;
    transition: all 0.3s; }
    .form__button span {
      z-index: 20; }
    .form__button:after {
      background: #fff;
      content: "";
      height: 155px;
      left: -75px;
      opacity: .2;
      position: absolute;
      top: -50px;
      -ms-transform: rotate(35deg);
          transform: rotate(35deg);
      transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1);
      width: 50px;
      z-index: -10; }
    .form__button:hover:after {
      left: 120%;
      transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1); }
    .form__button:focus {
      -ms-transform: scale(0.9);
          transform: scale(0.9); }

.form__label {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  position: relative;
  font-family: 'light';
  font-size: 18px;
  padding-right: 35px;
  color: white;
  margin-top: 15px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 35px; }

/* Customize the label (the container) */
/* Hide the browser's default checkbox */
.form__label input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0; }

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 50%;
  right: 0;
  -ms-transform: translateY(-50%);
      transform: translateY(-50%);
  height: 20px;
  width: 20px;
  background-color: #eee;
  transition: background-color 0.3s; }

/* On mouse-over, add a grey background color */
.form__label:hover input ~ .checkmark {
  background-color: #ccc; }

/* When the checkbox is checked, add a blue background */
.form__label input:checked ~ .checkmark {
  background-color: white; }

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  transition: opacity 0.3s;
  opacity: 0; }

/* Show the checkmark when checked */
.form__label input:checked ~ .checkmark:after {
  opacity: 1; }

/* Style the checkmark/indicator */
.form__label .checkmark:after {
  left: 8px;
  top: 2px;
  width: 5px;
  height: 15px;
  border: solid black;
  border-width: 0 2px 2px 0;
  -ms-transform: rotate(45deg);
  transform: rotate(45deg); }

@font-face {
  font-family: 'Gill Sans Regular';
  font-style: normal;
  font-weight: normal;
  src: local("Gill Sans Regular"), url("assets/fonts/Gill Sans.woff") format("woff"); }

@font-face {
  font-family: 'light';
  src: url("../fonts/GillSans-Light.woff2") format("woff2"), url("../fonts/GillSans-Light.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/* ---- particles.js container ---- */
#particles-js {
  position: absolute;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
